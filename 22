def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg49, arg50):
    var55 = func11(arg49, arg50)
    result = (arg49 & (var55 + ((525 ^ (arg50 - 908 | (arg50 & var55))) ^ -369 | 67 & arg50) | arg50)) | 1188985135
    return result
def func11(arg51, arg52):
    var53 = 0
    for var54 in range(20):
        var53 += var54 ^ var54
    return var53
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    if arg1 < arg2:
        var12 = class3()
    else:
        var12 = class5()
    for var13 in [var7 & ((-1 ^ ((var7 - (i + 2) + var7 | 8 | (4 | arg2) + i) & arg2)) | i) for i in xrange(25)]:
        var12.func4(arg2, arg2)
    var38 = var16(arg1, var7)
    var39 = var7 - arg2
    var40 = arg1 - (393 + (var7 | var38))
    if var40 < var40:
        var41 = (-661 | var40 & arg1) & var7
    else:
        var41 = ((-639 & var40) ^ var39) - var38
    var42 = var38 + (var39 ^ var38 ^ -333)
    var43 = var39 - arg1
    var44 = arg1 & (var7 + (-594747023 | var7))
    var45 = (var7 - 157658327 | var38) & var38
    var46 = var45 - (var39 ^ 384641684)
    var47 = var39 | (var40 & var44)
    var48 = var38 + var45
    result = -431153686 ^ arg1 + var47 + (var43 | ((var48 & arg2 - (var48 & 225003524) ^ var46 + var47) + var47 ^ var40))
    return result
def func9(arg17, arg18):
    var19 = (arg18 - -17) + 362967237
    var20 = -1411996507 - arg18 | arg18
    var21 = arg17 - var20
    var22 = -373739581 - arg17
    var23 = arg17 ^ 110975009 + 755 - arg18
    var24 = var20 + var23 - var22
    var25 = var19 | var22 ^ arg18 ^ -1471431902
    var26 = var21 & (var21 | -1558426107 | 1785979187)
    var27 = (-386 & (var22 & -1433072490)) | var23
    var28 = arg18 + var22 - var19 | arg18
    if var25 < var24:
        var29 = var27 | var27 - var20
    else:
        var29 = arg18 & var23
    var30 = (-1890571433 - var26 - var20) & -1399070806
    var31 = arg18 | var21
    var32 = var22 ^ (var21 - var31)
    var33 = ((var31 + arg18) ^ var24) | var25
    var34 = ((var19 & var22) ^ -60) | var31
    var35 = arg18 & ((arg17 + var20) ^ var34)
    var36 = var22 & var30
    var37 = var30 + var22 & var36
    result = ((var20 & var31) ^ var32) ^ var20
    return result
def func8():
    closure = [0]
    def func7(arg14, arg15):
        closure[0] += func9(arg14, arg15)
        return closure[0]
    func = func7
    return func
var16 = func8()
class class5(object):
    def func4(self, arg10, arg11):
        result = (arg11 ^ (arg11 - arg10) - arg11 & arg11) - 0 ^ arg10
        return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(1):
        var5 += arg3 ^ arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,
